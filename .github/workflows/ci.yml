name: CI Pipeline

defaults:
  run:
    shell: bash

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - master
      - develop
    types: [opened, synchronize, reopened]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '>=20.0.0'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ env.ENVIRONMENT }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --${{ env.BUILD_FLAG }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --${{ env.BUILD_FLAG }} --token=${{ secrets.VERCEL_TOKEN }}

  deploy_preview:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/develop'
    environment:
      ENVIRONMENT: preview
      BUILD_FLAG: ''

  deploy_prod:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/master'
    environment:
      ENVIRONMENT: production
      BUILD_FLAG: prod
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
