name: CI Pipeline

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - master
      - develop
    types: [opened, synchronize, reopened]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '>=20.0.0'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: |
      github.ref == 'refs/heads/develop' || 
      github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Set Environment and Token
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "ENVIRONMENT=preview" >> $GITHUB_ENV
            echo "VERCEL_ENVIRONMENT=preview" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "VERCEL_ENVIRONMENT=production" >> $GITHUB_ENV
          fi

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ env.VERCEL_ENVIRONMENT }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          if [ "${{ env.ENVIRONMENT }}" == "production" ]; then
            vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: Deploy Project Artifacts to Vercel
        run: |
          if [ "${{ env.ENVIRONMENT }}" == "production" ]; then
            vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi
