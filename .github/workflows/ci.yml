name: CI Pipeline

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - master
      - develop
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master
      - develop

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '>=20.0.0'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: false
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --${{ inputs.buildFlag }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --${{ inputs.deployFlag }} --token=${{ secrets.VERCEL_TOKEN }}

  deploy_preview:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Call deploy job
        uses: ./.github/workflows/ci-pipeline.yml
        with:
          environment: preview
          buildFlag: 'prod'
          deployFlag: ''

  deploy_prod:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Call deploy job
        uses: ./.github/workflows/ci-pipeline.yml
        with:
          environment: production
          buildFlag: 'prod'
          deployFlag: 'prod'
